@page "/Editcategory/{categoryId}"

@inject NavigationManager NavigationManager

@inject UseCases.IAddCategoryUseCase AddCategoryUseCase

@inject UseCases.IGetCategoryByIdUseCase GetCategoryByIdUseCase
@inject UseCases.IEditCategoryUseCase  EditCategoryUseCase


<h3>Edit Category</h3>

@if (category != null)
{

    <EditForm Model="category" OnValidSubmit="OnValidSumit">

        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <div class="form-group">
            <label for="name">Name</label>
            <InputText id="name" @bind-Value="category.Name" class="form-control"></InputText>
        </div>

        <div class="form-group">
            <label for="description">Description</label>
            <InputText id="description" @bind-Value="category.Description" class="form-control"></InputText>
        </div>

        <div class="form-group">
            <label for="legal">Is Legal?</label>
            <InputText id="legal" @bind-Value="category.IsLegalForEveryone" class="form-control"></InputText>
        </div>

        <div class="form-group">
            <label for="forKids">Is For Children?</label>
            <InputText id="forKids" @bind-Value="category.IsForChildren" class="form-control"></InputText>
        </div>

        <div class="form-group">
            <label for="recommendation">Recommended Age</label>
            <InputText id="recommendation" @bind-Value="category.RecommendedAge" class="form-control"></InputText>
        </div>

        <button type="submit" class="btn btn-primary">Save</button>

        <buton type="button" class="btn btn-primary" @onclick="OnCancel">Cancel</buton>

    </EditForm>
}


@code {

    [Parameter]
    public string CategoryId { get; set; }

    private Category category;

    protected override void OnInitialized()
    {
        base.OnInitialized();

    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        if (int.TryParse(this.CategoryId, out int ICategoryId))
        {
            var cat = GetCategoryByIdUseCase.Execute(ICategoryId);
            this.category = new Category
            {
                CategoryId = cat.CategoryId,
                Name = cat.Name,
                Description = cat.Description,
                IsLegalForEveryone = cat.IsLegalForEveryone,
                IsForChildren = cat.IsForChildren,
                RecommendedAge = cat.RecommendedAge,
            };
        }
    }

    //Method that Submits producs and categories
    private void OnValidSumit()
    {
        EditCategoryUseCase.Execute(this.category);
        NavigationManager.NavigateTo("/categories");
    }

    //Method that Cancels product adding
    private void OnCancel()
    {
        NavigationManager.NavigateTo("/categories");
    }

}
