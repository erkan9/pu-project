@page "/addcategory"
@attribute [Authorize(Policy ="AdminOnly")]

@inject NavigationManager NavigationManager

@inject UseCases.IAddCategoryUseCase AddCategoryUseCase

<h3>Add Category</h3>

@if (category != null)
{

<EditForm Model="category" OnValidSubmit="OnValidSumit">

    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>

    <div class="form-group">
        <label for="name">Name</label>
        <InputText id="name" @bind-Value="category.Name" class="form-control"></InputText>
    </div>

    <div class="form-group">
        <label for="description">Description</label>
        <InputText id="description" @bind-Value="category.Description" class="form-control"></InputText>
    </div>

    <div class="form-group">
        <label for="legal">Is Legal?</label>
        <InputText id="legal" @bind-Value="category.IsLegalForEveryone" class="form-control"></InputText>
    </div>

    <div class="form-group">
        <label for="forKids">Is For Children?</label>
        <InputText id="forKids" @bind-Value="category.IsForChildren" class="form-control"></InputText>
    </div>

    <div class="form-group">
        <label for="recommendation">Recommended Age</label>
        <InputText id="recommendation" @bind-Value="category.RecommendedAge" class="form-control"></InputText>
    </div>

    <button type="submit" class="btn btn-primary">Save</button>

    <buton type="button" class="btn btn-primary" @onclick="OnCancel">Cancel</buton>

</EditForm>
}


@code {

    private Category category;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        category = new Category();
    }


    //Method that Submits producs and categories
    private void OnValidSumit()
    {
        AddCategoryUseCase.Execute(category);
        NavigationManager.NavigateTo("/categories");
    }

    //Method that Cancels product adding
    private void OnCancel()
    {
        NavigationManager.NavigateTo("/categories");
    }

}
