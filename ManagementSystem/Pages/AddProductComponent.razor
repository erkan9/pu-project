@page "/addproduct"

@inject NavigationManager NavigationManager

@inject UseCases.IAddProductUseCase AddProductUseCase

@inject UseCases.IViewCategoriesUseCase ViewCategoriesUseCase

<h3>Add Product</h3>
<br />
@if (product != null)
{

    <EditForm Model="product" OnValidSubmit="OnValidSumit">

        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <div class="form-group">
            <label for="name">Name</label>
            <InputText id="name" @bind-Value="product.Name" class="form-control"></InputText>
        </div>

        <div class="form-group">

            <label for="category">Category</label>

            <select id="category" @bind="product.CategoryId" class="form-control">

                <option selected></option>
                @foreach (var cat in categories)
                {
                    <option value="@cat.CategoryId">@cat.Name</option>
                }

            </select>
        </div>

        <div class="form-group">
            <label for="price">Price</label>
            <InputNumber id="price" @bind-Value="product.Price" @bind-Value:format="F2" class="form-control"></InputNumber>
        </div>

        <div class="form-group">
            <label for="quanity">Quanity</label>
            <InputNumber id="quanity" @bind-Value="product.Quanity" class="form-control"></InputNumber>
        </div>

        <div class="form-group">
            <label for="description">Description</label>
            <InputText id="description" @bind-Value="product.Description" class="form-control"></InputText>
        </div>

        <button type="submit" class="btn btn-primary">Save</button>

        <buton type="button" class="btn btn-primary" @onclick="OnCancel">Cancel</buton>

    </EditForm>
}


@code {

    private Product product;

    private IEnumerable<Category> categories;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        product = new Product();

        categories = ViewCategoriesUseCase.Execute();
    }


    //Method that Submits producs and categories
    private void OnValidSumit()
    {
        AddProductUseCase.Execute(product);
        NavigationManager.NavigateTo("/products");
    }

    //Method that Cancels product adding
    private void OnCancel()
    {
        NavigationManager.NavigateTo("/products");
    }

}
